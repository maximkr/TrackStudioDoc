<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" lasteditedby="xp" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Как сделать динамический интервал для операций по расписанию</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Как сделать динамический интервал для операций по расписанию</text></para>
    </header>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:normal; page-break-inside:avoid; page-break-after:auto; tabstops:none;"><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; vertical-align:baseline; color:#000000;" translate="true">Реализованный механизм находится в проекте скриптов в папке</text><text styleclass="apple-converted-space" style="font-family:Verdana; font-size:12pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;" translate="true">&#32;</text><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; font-weight:bold; vertical-align:baseline; color:#000000;" translate="true">etc/development/scripts</text><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; vertical-align:baseline; color:#000000;" translate="true">. Реализация написана в утилитном классе ItitialJob.</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:nowrap; page-break-inside:avoid; page-break-after:auto; tabstops:none;"></para>
    <para styleclass="Code Example" style="text-align:left; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; white-space:nowrap; page-break-inside:avoid; page-break-after:auto; tabstops:none;"><text styleclass="Code Example" translate="true">package scripts;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.app.UdfValue;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.app.adapter.scheduler.SchedulerManager;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.exception.GranException;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.kernel.cache.TaskRelatedInfo;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.kernel.cache.TaskRelatedManager;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.tools.Pair;</text><br/><text styleclass="Code Example" translate="true">import org.quartz.Job;</text><br/><text styleclass="Code Example" translate="true">import org.quartz.JobBuilder;</text><br/><text styleclass="Code Example" translate="true">import org.quartz.impl.triggers.CronTriggerImpl;</text><br/><text styleclass="Code Example" translate="true">import org.slf4j.Logger;</text><br/><text styleclass="Code Example" translate="true">import org.slf4j.LoggerFactory;</text><br/><text styleclass="Code Example" translate="true">/**</text><br/><text styleclass="Code Example" translate="true"> * TODO: comment</text><br/><text styleclass="Code Example" translate="true"> * @author parsentev</text><br/><text styleclass="Code Example" translate="true"> * @since 25.04.2016</text><br/><text styleclass="Code Example" translate="true"> */</text><br/><text styleclass="Code Example" translate="true">public class InitialJob {</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160;private static final Logger log = LoggerFactory.getLogger(InitialJob.class);</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160;private final TaskRelatedInfo info;</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160;private final TaskRelatedManager manager;</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160;public InitialJob(TaskRelatedInfo info) {</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;this.info = info;</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;this.manager = TaskRelatedManager.getInstance();</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160;}</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160;public void init() throws GranException {</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;try {</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;String jobClass = null;</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;String cronTime = null;</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;for (UdfValue ul : manager.getUDFValues(info.getId())) {</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;if (&quot;scheduler job&quot;.equals(ul.getCaption()) &amp;&amp;</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;ul.getValueContainer().getValue(null)!=null) {</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;jobClass = &quot;scripts.&quot; + ((Pair) ul.getValueContainer()</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;.getValue(null)).getValue();</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;} else if (&quot;cron time&quot;.equals(ul.getCaption()) &amp;&amp;</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;ul.getValueContainer().getValue(null)!=null) {</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;cronTime = ((Pair) ul.getValueContainer()</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;.getValue(null)).getValue();</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;}</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;}</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;if (jobClass != null &amp;&amp; !&quot;scripts.none&quot;.equals(jobClass) &amp;&amp;</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;cronTime != null &amp;&amp; !&quot;none&quot;.equals(cronTime)) {</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;SchedulerManager.getInstance().deleteJob(info.getId());</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;CronTriggerImpl trigger = new CronTriggerImpl();</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;trigger.setName(String.format(&quot;trigger %s&quot;, info.getId()));</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;trigger.setCronExpression(cronTime);</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;SchedulerManager.getInstance().scheduleJob(</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;JobBuilder.newJob((Class&lt;Job&gt;) Class.forName(jobClass)).withIdentity(info.getId()).build(),</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;trigger</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;);</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;}</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;} catch (Exception e) {</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;throw new GranException(e);</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;}</text><br/><text styleclass="Code Example" translate="true"> &#160; &#160;}</text><br/><text styleclass="Code Example" translate="true">}</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:nowrap; page-break-inside:avoid; page-break-after:auto; tabstops:none;"></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:normal; page-break-inside:avoid; page-break-after:auto; tabstops:none;"><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; vertical-align:baseline; color:#000000;" translate="true">Объект InitialJob в качестве параметра принимает задачу и в методе init() проверяет у нее дополнительные поля &quot;scheduler job&quot; и &quot;cron time&quot;. В случае, когда оба поля заполнены, создается новое задание по расписанию из поля &quot;scheduler job&quot; с временем выполнения из &quot;cron time&quot;.</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:nowrap; page-break-inside:avoid; page-break-after:auto; tabstops:none;"></para>
    <para styleclass="Normal" style="text-align:center; text-indent:0px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:nowrap; page-break-inside:avoid; page-break-after:auto; tabstops:none;"><image src="cronTime.PNG" scale="100.00%" padding="1 0 1 0" styleclass="Image Caption" style="font-size:12pt;"></image></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:nowrap; page-break-inside:avoid; page-break-after:auto; tabstops:none;"></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:normal; page-break-inside:avoid; page-break-after:auto; tabstops:none;"><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; vertical-align:baseline; color:#000000;" translate="true">Оба поля являются пользовательскими полями типа &quot;Список&quot; в процессе. В значения поля &quot;cron time&quot; записываются нужные интервалы</text><text styleclass="apple-converted-space" style="font-family:Verdana; font-size:12pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;" translate="true">&#32;</text><link displaytype="text" defaultstyle="true" type="weblink" href="http://quartz-scheduler.org/documentation/quartz-2.2.x/tutorials/tutorial-lesson-06" styleclass="ext" style="font-family:Verdana; font-size:12pt; font-weight:normal; font-style:normal; text-decoration:underline; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;" translate="true">в синтаксисе quartz</link><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; vertical-align:baseline; color:#000000;" translate="true">. В значения же поля &quot;scheduler job&quot; записываются имена классов, которые лежат в папке etc/plugins/scripts (в проекте это класс AlertToConsole).</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:nowrap; page-break-inside:avoid; page-break-after:auto; tabstops:none;"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">package scripts;</text><br/><text styleclass="Code Example" translate="true">import org.quartz.Job;</text><br/><text styleclass="Code Example" translate="true">import org.quartz.JobExecutionContext;</text><br/><text styleclass="Code Example" translate="true">import org.quartz.JobExecutionException;</text><br/><text styleclass="Code Example" translate="true">import org.slf4j.Logger;</text><br/><text styleclass="Code Example" translate="true">import org.slf4j.LoggerFactory;</text><br/><text styleclass="Code Example" translate="true">/**</text><br/><text styleclass="Code Example" translate="true"> * TODO: comment</text><br/><text styleclass="Code Example" translate="true"> * @author parsentev</text><br/><text styleclass="Code Example" translate="true"> * @since 25.04.2016</text><br/><text styleclass="Code Example" translate="true"> */</text><br/><text styleclass="Code Example" translate="true">public class AlertToConsole implements Job {</text><br/><text styleclass="Code Example" translate="true"> private static final Logger log = LoggerFactory.getLogger(AlertToConsole.class);</text><br/><text styleclass="Code Example" translate="true"> @Override</text><br/><text styleclass="Code Example" translate="true"> public void execute(JobExecutionContext jobExecutionContext) throws JobExecutionException {</text><br/><text styleclass="Code Example" translate="true"> &#160;System.out.println(&quot;Alert&quot;);</text><br/><text styleclass="Code Example" translate="true"> }</text><br/><text styleclass="Code Example" translate="true">}</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:nowrap; page-break-inside:avoid; page-break-after:auto; tabstops:none;"></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:normal; page-break-inside:avoid; page-break-after:auto; tabstops:none;"><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; vertical-align:baseline; color:#000000;" translate="true">Класс с заданием по расписанию должен реализовывать интерфейс Job. Все необходимые действия реализуются в переопределенном методе execute(JobExecutionContext jobExecutionContext);</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:normal; page-break-inside:avoid; page-break-after:auto; tabstops:none;"><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; vertical-align:baseline; color:#000000;" translate="true">Операция по расписанию запускается after_create скриптом InitialSchedulerJob, после создания задачи. Скрипт подключается в настройках категории.</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:normal; page-break-inside:avoid; page-break-after:auto; tabstops:none;"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">package scripts.after_create_task.example;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.exception.GranException;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.external.TaskTrigger;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.secured.SecuredTaskTriggerBean;</text><br/><text styleclass="Code Example" translate="true">import org.slf4j.Logger;</text><br/><text styleclass="Code Example" translate="true">import org.slf4j.LoggerFactory;</text><br/><text styleclass="Code Example" translate="true">import scripts.InitialJob;</text><br/><text styleclass="Code Example" translate="true">/**</text><br/><text styleclass="Code Example" translate="true"> * TODO: comment</text><br/><text styleclass="Code Example" translate="true"> * @author parsentev</text><br/><text styleclass="Code Example" translate="true"> * @since 25.04.2016</text><br/><text styleclass="Code Example" translate="true"> */</text><br/><text styleclass="Code Example" translate="true">public class InitialSchedulerJob implements TaskTrigger {</text><br/><text styleclass="Code Example" translate="true"> private static final Logger log = LoggerFactory.getLogger(InitialSchedulerJob.class);</text><br/><text styleclass="Code Example" translate="true"> @Override</text><br/><text styleclass="Code Example" translate="true"> public SecuredTaskTriggerBean execute(SecuredTaskTriggerBean task) throws GranException {</text><br/><text styleclass="Code Example" translate="true"> &#160;new InitialJob(task.getTask()).init();</text><br/><text styleclass="Code Example" translate="true"> &#160;return task;</text><br/><text styleclass="Code Example" translate="true"> }</text><br/><text styleclass="Code Example" translate="true">}</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:nowrap; page-break-inside:avoid; page-break-after:auto; tabstops:none;"></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:normal; page-break-inside:avoid; page-break-after:auto; tabstops:none;"><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; vertical-align:baseline; color:#000000;" translate="true">В случае необходимости можно сделать after скрипты, срабатывающие после операций или редактирования задачи.</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:normal; page-break-inside:avoid; page-break-after:auto; tabstops:none;"><text styleclass="Normal" style="font-family:Verdana; font-size:12pt; vertical-align:baseline; color:#000000;" translate="true">Скрипт InitialLoader при перезапуске сервера проверяет все задачи в системе и перезагружает для них задания по расписанию.</text></para>
    <para styleclass="Normal" style="text-align:left; text-indent:48px; margin-top:0px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.00; background-color:#ffffff; white-space:normal; page-break-inside:avoid; page-break-after:auto; tabstops:none;"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">package scripts.scheduler.example;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.app.adapter.scheduler.SchedulerManager;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.external.IGeneralScheduler;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.kernel.cache.TaskRelatedInfo;</text><br/><text styleclass="Code Example" translate="true">import com.trackstudio.kernel.cache.TaskRelatedManager;</text><br/><text styleclass="Code Example" translate="true">import org.slf4j.Logger;</text><br/><text styleclass="Code Example" translate="true">import org.slf4j.LoggerFactory;</text><br/><text styleclass="Code Example" translate="true">import scripts.InitialJob;</text><br/><text styleclass="Code Example" translate="true">/**</text><br/><text styleclass="Code Example" translate="true"> * TODO: comment</text><br/><text styleclass="Code Example" translate="true"> * @author parsentev</text><br/><text styleclass="Code Example" translate="true"> * @since 25.04.2016</text><br/><text styleclass="Code Example" translate="true"> */</text><br/><text styleclass="Code Example" translate="true">public class InitialLoader implements IGeneralScheduler{</text><br/><text styleclass="Code Example" translate="true"> private static final Logger log = LoggerFactory.getLogger(InitialLoader.class);</text><br/><text styleclass="Code Example" translate="true"> @Override</text><br/><text styleclass="Code Example" translate="true"> public String getClassName() {</text><br/><text styleclass="Code Example" translate="true"> &#160;return InitialLoader.class.getName();</text><br/><text styleclass="Code Example" translate="true"> }</text><br/><text styleclass="Code Example" translate="true"> @Override</text><br/><text styleclass="Code Example" translate="true"> public String getCronTime() {</text><br/><text styleclass="Code Example" translate="true"> &#160;return &quot;0/1 * * * * ?&quot;;</text><br/><text styleclass="Code Example" translate="true"> }</text><br/><text styleclass="Code Example" translate="true"> @Override</text><br/><text styleclass="Code Example" translate="true"> public String getName() {</text><br/><text styleclass="Code Example" translate="true"> &#160;return &quot;initial loader&quot;;</text><br/><text styleclass="Code Example" translate="true"> }</text><br/><text styleclass="Code Example" translate="true"> @Override</text><br/><text styleclass="Code Example" translate="true"> public String execute() throws Exception {</text><br/><text styleclass="Code Example" translate="true"> &#160;TaskRelatedManager manager = TaskRelatedManager.getInstance();</text><br/><text styleclass="Code Example" translate="true"> &#160;for (TaskRelatedInfo info : manager.getCacheContents()) {</text><br/><text styleclass="Code Example" translate="true"> &#160; new InitialJob(info).init();</text><br/><text styleclass="Code Example" translate="true"> &#160;}</text><br/><text styleclass="Code Example" translate="true"> &#160;SchedulerManager.getInstance().deleteJob(this.getName());</text><br/><text styleclass="Code Example" translate="true"> &#160;return null;</text><br/><text styleclass="Code Example" translate="true"> }</text><br/><text styleclass="Code Example" translate="true"> @Override</text><br/><text styleclass="Code Example" translate="true"> public boolean isUse() {</text><br/><text styleclass="Code Example" translate="true"> &#160;return true;</text><br/><text styleclass="Code Example" translate="true"> }</text><br/><text styleclass="Code Example" translate="true">}</text></para>
  </body>
</topic>
